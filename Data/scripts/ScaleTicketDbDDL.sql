
DROP TABLE IF EXISTS Applications;

CREATE TABLE Applications(
    Id INT NOT NULL IDENTITY PRIMARY KEY,
    [Name] VARCHAR(256) NOT NULL,
    RelativeURI VARCHAR(256) NULL,
    IndexURL VARCHAR(256) NULL,
    DirectoryPath VARCHAR(512) NULL,
    RepositoryUrl VARCHAR(512) NULL,
    ApplicationType VARCHAR(128) NULL,
    CurrentVersion VARCHAR(28) NULL DEFAULT '1.0.0.0',
    CreatedOn DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
    UpdatedOn DATETIME NULL DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS Roles;

CREATE TABLE Roles(
    Id INT NOT NULL IDENTITY PRIMARY KEY,
    [Name] VARCHAR(256) NOT NULL
);

DROP TABLE IF EXISTS [Permissions];

CREATE TABLE [Permissions](
    Id INT NOT NULL IDENTITY PRIMARY KEY,
    [Name] VARCHAR(256) NOT NULL
);

DROP TABLE IF EXISTS RoleHasPermissions;

CREATE TABLE RoleHasPermissions(
    RoleId INT NOT NULL,
    PermissionId INT NOT NULL,
    PRIMARY KEY(RoleId, PermissionId)
);

ALTER TABLE RoleHasPermissions ADD CONSTRAINT role_has_permissions_roleId FOREIGN KEY(RoleId) REFERENCES Roles(Id);
ALTER TABLE RoleHasPermissions ADD CONSTRAINT role_has_permissions_permissionId FOREIGN KEY(PermissionId) REFERENCES Permissions(Id);


DROP TABLE IF EXISTS Users;

CREATE TABLE Users(
    Id INT NOT NULL IDENTITY PRIMARY KEY,
    Username VARCHAR(255) NOT NULL,
    Email VARCHAR(256) NOT NULL,
    Password VARCHAR(256) NOT NULL,
    CreatedOn DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
    UpdatedOn DATETIME NULL DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS UserHasRoles;

CREATE TABLE UserHasRoles(
    RoleId INT NOT NULL,
    UserId INT NOT NULL,
    PRIMARY KEY(RoleId, UserId)
);

ALTER TABLE UserHasRoles ADD CONSTRAINT user_has_roles_roleId FOREIGN KEY(RoleId) REFERENCES Roles(Id);
ALTER TABLE UserHasRoles ADD CONSTRAINT user_has_roles_userId FOREIGN KEY(UserId) REFERENCES Users(Id);


DROP TABLE IF EXISTS [Locations];

CREATE TABLE [Locations](
	Id INT NOT NULL IDENTITY PRIMARY KEY,
	[Name] VARCHAR(256) NULL,
	[Address1] VARCHAR(256) NULL,
	[Address2] VARCHAR(256) NULL,
	[City] VARCHAR(256) NULL,
	[State] VARCHAR(2) NULL,
	[Zip] VARCHAR(12) NULL,
	[Country] VARCHAR(28) NULL,
	[LatLong] VARCHAR(128) NULL,
	CreatedOn DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
    UpdatedOn DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
	Notes VARCHAR(max) NULL
);

DROP TABLE IF EXISTS Contacts;

CREATE TABLE Contacts(
	Id INT NOT NULL IDENTITY PRIMARY KEY,
	[Name] VARCHAR(256)  NULL,
	[Phone1] VARCHAR(28) NULL,
	[Phone2] VARCHAR(28) NULL,
	[Fax] VARCHAR(28)    NULL,
	[Email1] VARCHAR(128) NULL,
	[Email2] VARCHAR(128) NULL,
	[Url] VARCHAR(128)    NULL,
	[LocationId] INT NULL,
    CreatedOn DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
    UpdatedOn DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
	LastContacted DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
	Notes VARCHAR(max) NULL
);

DROP TABLE IF EXISTS Customers;

/* TODO: Add AccountId */
CREATE TABLE Customers(
	Id INT NOT NULL IDENTITY PRIMARY KEY,
	[Name] VARCHAR(256)  NULL,
	LocationId INT NULL,
	ContactId INT NULL,
    CreatedOn DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
    UpdatedOn DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
	Notes VARCHAR(max) NULL
);

ALTER TABLE Customers ADD CONSTRAINT customer_location_id FOREIGN KEY(LocationId) REFERENCES Locations(Id);
ALTER TABLE Customers ADD CONSTRAINT customer_contact_id FOREIGN KEY(ContactId) REFERENCES Contacts(Id);

DROP TABLE IF EXISTS Scales;

CREATE TABLE Scales(
    Id INT CHECK (id > 0) NOT NULL IDENTITY PRIMARY KEY,
    [Name] VARCHAR(256) NOT NULL,
    [LocationId] INT NOT NULL,
    ScaleMfg VARCHAR(256) NOT NULL,
    ScaleModel VARCHAR(256) NOT NULL,
    ScaleSerialNo VARCHAR(256) NOT NULL,
    ScaleProperties VARCHAR(256) NOT NULL,
    DateInstalled DATETIME NOT NULL,
    Installer VARCHAR(256) NOT NULL,
    DateCalibrated DATETIME NOT NULL,
    CalibratedBy VARCHAR(256) NOT NULL,
    Notes VARCHAR(max) NOT NULL
);

ALTER TABLE Scales ADD CONSTRAINT scale_location_id FOREIGN KEY(LocationId) REFERENCES Locations(Id);

DROP TABLE IF EXISTS ScaleTickets;

CREATE TABLE ScaleTickets(
    Id INT NOT NULL IDENTITY PRIMARY KEY,
    ScaleId INT NOT NULL,
    CreatedOn DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
    CreatedBy INT NOT NULL,
	CustomerId INT NOT NULL,
    TruckId VARCHAR(255) NOT NULL,
    DriverId VARCHAR(255) NOT NULL,
    WeightTare INT NOT NULL,
    WeightNet INT NOT NULL,
    WeightGross INT NOT NULL,
    VehicleType INT NOT NULL,
    Notes VARCHAR(max) NOT NULL
);

ALTER TABLE ScaleTickets ADD CONSTRAINT scale_ticket_scale_id FOREIGN KEY(ScaleId) REFERENCES Scale(Id);
ALTER TABLE ScaleTickets ADD CONSTRAINT scale_ticket_created_by FOREIGN KEY(CreatedBy) REFERENCES Users(Id);
